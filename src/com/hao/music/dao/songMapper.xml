<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.mapper.songMapper">
  <resultMap id="BaseResultMap" type="com.hao.music.entity.Song">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="singer_id" jdbcType="INTEGER" property="singerId" />
    <result column="album_id" jdbcType="INTEGER" property="albumId" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="composer" jdbcType="VARCHAR" property="composer" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hao.music.entity.Song">
    <result column="lyrics" jdbcType="LONGVARCHAR" property="lyrics" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, name, singer_id, album_id, url, img, author, composer, duration
  </sql>
  <sql id="Blob_Column_List">
    lyrics
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hao.music.entity.songExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hao.music.entity.songExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hao.music.entity.songExample">
    delete from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hao.music.entity.Song">
    insert into song (ID, name, singer_id, 
      album_id, url, img, 
      author, composer, duration, 
      lyrics)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{singerId,jdbcType=INTEGER}, 
      #{albumId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{composer,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, 
      #{lyrics,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hao.music.entity.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="albumId != null">
        album_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="composer != null">
        composer,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="lyrics != null">
        lyrics,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        #{singerId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="composer != null">
        #{composer,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="lyrics != null">
        #{lyrics,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hao.music.entity.songExample" resultType="java.lang.Long">
    select count(*) from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update song
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.singerId != null">
        singer_id = #{record.singerId,jdbcType=INTEGER},
      </if>
      <if test="record.albumId != null">
        album_id = #{record.albumId,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.composer != null">
        composer = #{record.composer,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.lyrics != null">
        lyrics = #{record.lyrics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update song
    set ID = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      singer_id = #{record.singerId,jdbcType=INTEGER},
      album_id = #{record.albumId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      composer = #{record.composer,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER},
      lyrics = #{record.lyrics,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update song
    set ID = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      singer_id = #{record.singerId,jdbcType=INTEGER},
      album_id = #{record.albumId,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      composer = #{record.composer,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hao.music.entity.Song">
    update song
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="singerId != null">
        singer_id = #{singerId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null">
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="composer != null">
        composer = #{composer,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="lyrics != null">
        lyrics = #{lyrics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hao.music.entity.Song">
    update song
    set name = #{name,jdbcType=VARCHAR},
      singer_id = #{singerId,jdbcType=INTEGER},
      album_id = #{albumId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      composer = #{composer,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      lyrics = #{lyrics,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hao.music.entity.Song">
    update song
    set name = #{name,jdbcType=VARCHAR},
      singer_id = #{singerId,jdbcType=INTEGER},
      album_id = #{albumId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      composer = #{composer,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>