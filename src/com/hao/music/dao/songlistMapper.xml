<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hao.mapper.songlistMapper">
  <resultMap id="BaseResultMap" type="com.hao.music.entity.Songlist">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="user_ID" jdbcType="INTEGER" property="userId" />
    <result column="song_ID" jdbcType="INTEGER" property="songId" />
    <result column="createtime" jdbcType="DATE" property="createtime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, user_ID, song_ID, createtime, name, img, introduce
  </sql>
  <select id="selectByExample" parameterType="com.hao.music.entity.songlistExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from songlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from songlist
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from songlist
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hao.music.entity.songlistExample">
    delete from songlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hao.music.entity.Songlist">
    insert into songlist (ID, user_ID, song_ID, 
      createtime, name, img, 
      introduce)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{songId,jdbcType=INTEGER}, 
      #{createtime,jdbcType=DATE}, #{name,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hao.music.entity.Songlist">
    insert into songlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        user_ID,
      </if>
      <if test="songId != null">
        song_ID,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="songId != null">
        #{songId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hao.music.entity.songlistExample" resultType="java.lang.Long">
    select count(*) from songlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update songlist
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.songId != null">
        song_ID = #{record.songId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update songlist
    set ID = #{record.id,jdbcType=INTEGER},
      user_ID = #{record.userId,jdbcType=INTEGER},
      song_ID = #{record.songId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hao.music.entity.Songlist">
    update songlist
    <set>
      <if test="userId != null">
        user_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="songId != null">
        song_ID = #{songId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hao.music.entity.Songlist">
    update songlist
    set user_ID = #{userId,jdbcType=INTEGER},
      song_ID = #{songId,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>